rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for CV files
    match /cv/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow create, update: if isOwner(userId) 
                   && request.resource.size <= 2 * 1024 * 1024
                   && request.resource.contentType == 'application/pdf';
      allow delete: if isOwner(userId);
    }

    // Rules for profile photos
    match /photos/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow create, update: if isOwner(userId)
                   && request.resource.size <= 2 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');
      allow delete: if isOwner(userId);
    }

    // Rules for message attachments
    match /conversations/{conversationId}/messages/{messageId}/{fileName} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated()
                   && request.resource.size <= 5 * 1024 * 1024
                   && (
                     request.resource.contentType == 'application/pdf' ||
                     request.resource.contentType.matches('image/.*')
                   );
    }
  }
}